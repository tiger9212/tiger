<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sharding="http://shardingjdbc.io/schema/shardingjdbc/sharding"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd   http://shardingjdbc.io/schema/shardingjdbc/sharding http://shardingjdbc.io/schema/shardingjdbc/sharding/sharding.xsd">
    <!--<context:property-placeholder location="classpath:conf/conf.properties" ignore-unresolvable="true" />-->

    <bean id="user_0" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://47.52.227.107:3306/user_0" />
        <property name="username" value="magic" />
        <property name="password" value="zhouyi" />
    </bean>
    <bean id="user_1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://47.52.227.107:3306/user_1" />
        <property name="username" value="magic" />
        <property name="password" value="zhouyi" />
    </bean>

    <sharding:hint-strategy id="hintStrategy" algorithm-class=""/>
    <sharding:inline-strategy id="databaseStrategy" sharding-column="id" algorithm-expression="user_${id % 2}" />
    <sharding:inline-strategy id="userTableStrategy" sharding-column="id" algorithm-expression="t_user_info_${id % 4}" />
    <!--<sharding:inline-strategy id="userItemTableStrategy" sharding-column="order_id" algorithm-expression="t_order_item_${order_id % 2}" />-->

    <sharding:data-source id="dataSource">
        <sharding:sharding-rule data-source-names="user_0,user_1">
            <sharding:table-rules>
                <sharding:table-rule logic-table="t_user_info" actual-data-nodes="user_${0..1}.t_user_info_${0..3}" database-strategy-ref="databaseStrategy" table-strategy-ref="userTableStrategy" />
                <!--<sharding:table-rule logic-table="t_order_item" actual-data-nodes="ds_${0..1}.t_order_item_${0..1}" database-strategy-ref="databaseStrategy" table-strategy-ref="orderItemTableStrategy" />-->
            </sharding:table-rules>
        </sharding:sharding-rule>
        <sharding:props>
            <prop key="sql.show">true</prop>
        </sharding:props>
    </sharding:data-source>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.outab.tiger.jdbc.dao"></property>
    </bean>
    <!--定义会话工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:com/outab/tiger/jdbc/mapper/*.xml" />
        <property name="typeAliasesPackage" value="com.outab.tiger.jdbc.dao"/>
    </bean>
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--事物模板-->
    <bean id="transactionTemplate"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
        <!--ISOLATION_DEFAULT 表示由使用的数据库决定  -->
        <property name="isolationLevelName" value="ISOLATION_DEFAULT"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
        <property name="timeout" value="300"/>
    </bean>
</beans>